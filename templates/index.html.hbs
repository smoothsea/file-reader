<html>
<head>
    <meta name=renderer content=webkit>
    <title>文件夹</title>
</head>
<body>
    <h2>文件目录</h2>

    {{#if status}}
    <form method="get" action="/search" target="_blank">
        全文搜索：
        <input type="text" name="search">
        <input type="text" name="before" value="10" placeholder="前xx行">
        <input type="text" name="after" value="20" placeholder="后xx行">
        &nbsp;Aa<input type="checkbox" name="case_sensitive" value="true">&nbsp;
        <input type="hidden" name="path" value="{{ file_path }}">
        <input type="submit" value="搜索">
    </form>
    <table id="main" style="width: 100%;">
        <thead>
            <td class="name">文件名</td>
            <td class="size">文件大小</td>
            <td class="date">时间</td>
        </thead>
        <tbody id="tbody">
        </tbody>
    </table>
    {{~^~}}
    {{info}}
    {{/if~}}

    <div id="data" style="display: none;">
        {{ list }}
    </div>
    <script src="/public/zepto.js"></script>
    <script>
        (function (w, d) {
            var list;
            var sort = {
                field: "name",
                order: "asc",
            };
            var url = location.href.replace(/file-reader-index$/, "").replace(/\/$/, "") + "/";
            var path = location.pathname.replace(/file-reader-index$/, "").replace(/\/$/, "") + "/";

            var tbody = document.getElementById("tbody");
            var data = document.getElementById("data");

            var main = d.getElementById("main");
            list = JSON.parse(data.innerText);
            init();

            var headers = d.getElementsByTagName("thead")[0].getElementsByTagName("td");
            for (var i = 0, len = headers.length; i < len; i++) {
                var element = headers[i];
                element.onclick = function (e) {
                    var type = e.target.className;
                    if (sort.field == type) {
                        sort.order = sort.order == "asc" ? "desc" : "asc";
                    } else {
                        sort.field = type;
                        sort.order = "asc";
                    }

                    init();
                }
            }

            function init() {
                var tArray = list;
                tArray.sort(function (a, b) {
                    var comparedContent1 = "";
                    var comparedContent2 = "";
                    if (sort.field == "name") {
                        comparedContent1 = a.class + "-" + a.name;
                        comparedContent2 = b.class + "-" + b.name;
                    } else {
                        comparedContent1 = a[sort.field];
                        comparedContent2 = b[sort.field];
                    }

                    if (sort.order == "desc") {
                        $t = comparedContent1;
                        comparedContent1 = comparedContent2;
                        comparedContent2 = t;
                    }

                    return comparedContent1 > comparedContent2 ? 1 : (comparedContent1 == comparedContent2 ? 0 : -1);
                });

                var html = "";
                for (i = 0, len = tArray.length; i < len; i++) {
                    var t = byteToText(tArray[i]["size"]);
                    html += "<tr>"
                        + "<td>" + "[" + tArray[i]["class"] + '] <a href="' + url + tArray[i]["name"] + '">' + tArray[i]["name"] + "</a></td>"
                        + "<td>" + t + "</td>"
                        + "<td>" + tArray[i]["date"] + "</td>"
                        + "</tr>";
                }
                tbody.innerHTML = html;
            }

            function byteToText(bytes) {
                if (isNaN(bytes)) {
                    return '';
                }
                var symbols = ['b', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
                var exp = Math.floor(Math.log(bytes) / Math.log(2));
                if (exp < 1) {
                    exp = 0;
                }
                var i = Math.floor(exp / 10);
                bytes = bytes / Math.pow(2, 10 * i);

                if (bytes.toString().length > bytes.toFixed(2).toString().length) {
                    bytes = bytes.toFixed(2);
                }
                return bytes + symbols[i];
            }

            // 拖拽上传
            document.addEventListener("drop",preventDe);
            document.addEventListener("dragleave",preventDe);
            document.addEventListener("dragover",preventDe);
            document.addEventListener("dragenter",preventDe);

            function preventDe(e){
              e.preventDefault();
            }

            // TODO 重复先提示
            document.addEventListener("drop",function(e){
              e.preventDefault();
              var formData = new FormData();
              var file = e.dataTransfer.files[0];
              formData.append("file", file);

              $.ajax({
                type: 'post',
                url: '/upload?path=' + path + '&file_name=' + file.name,
                processData: false,
                contentType: false,
                data:formData,
                dataType:'json',
                success:function(ret){
                  if (ret.status == 1) {
                    window.location.reload();
                  } else {
                    alert(ret.message);
                  }
                },
                error:function(xhr, type){
                }
              });
            })
        })(window, document)
    </script>
</body>

</html>
