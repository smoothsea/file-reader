<html>
<head>
    <meta name=renderer content=webkit>
    <title>文件夹</title>
    <style>
      i {
        font-style: nomal;
      }

      #main tr td:first-child {
        line-height: 24px;
        display: flex;
        align-item: center;
      }

      #main thead td {
        cursor: pointer;
      }

      .menu {
        position: absolute;
        background-color: #fff;
        border: 1px solid #ccc;
        padding: 5px;
      }

      .menu li {
        list-style: none;
        padding: 5px;
        font-size: 12px;
      }

      .menu li:hover {
        background-color: #f1f1f1;
        cursor: pointer;
      }
    </style>
</head>
<body>
    <h2>{{#if file_path}} {{file_path}} {{else}} 文件目录 {{/if}}</h2>

    {{#if status}}
    <form method="get" action="/search" target="_blank">
        全文搜索：
        <input type="text" name="search">
        <input type="text" name="before" value="10" placeholder="前xx行">
        <input type="text" name="after" value="20" placeholder="后xx行">
        &nbsp;Aa<input type="checkbox" name="case_sensitive" value="true">&nbsp;
        <input type="hidden" name="path" value="{{ file_path }}">
        <input type="submit" value="搜索">
    </form>
  
  
    <input type="file" name="file" id="upload_file" style="display:none">
    <table id="main" style="width: 100%;">
        <thead>
            <td class="name">文件名<i class="arrow">↑</i></td>
            <td class="size">文件大小</td>
            <td class="date">时间</td>
        </thead>
        <tbody id="tbody">
        </tbody>
    </table>
    {{~^~}}
    {{info}}
    {{/if~}}

    <div id="data" style="display: none;">
        {{ list }}
    </div>
    <script src="/public/zepto.js"></script>
    <script>
        var write = {{ write }};

        (function (w, d) {
            var list;
            var sort = {
                field: "name",
                order: "asc",
            };
            var url = location.href.replace(/file-reader-index$/, "").replace(/\/$/, "") + "/";
            var path = location.pathname.replace(/file-reader-index$/, "").replace(/\/$/, "") + "/";

            var tbody = document.getElementById("tbody");
            var data = document.getElementById("data");

            var main = d.getElementById("main");
            list = JSON.parse(data.innerText);
            init();

            var headers = d.getElementsByTagName("thead")[0].getElementsByTagName("td");
            for (var i = 0, len = headers.length; i < len; i++) {
                var element = headers[i];
                element.onclick = function (e) {
                    var target = e.target.className == "arrow" ? e.target.parentNode : e.target;
                    var type = target.className;
                    if (sort.field == type) {
                        sort.order = sort.order == "asc" ? "desc" : "asc";
                    } else {
                        sort.field = type;
                        sort.order = "asc";
                    }

                    var lastArrow = document.getElementsByClassName("arrow")[0];
                    lastArrow && lastArrow.remove();
                    var arrowHtml = sort.order == "asc" ? '<i class="arrow">↑</i>' : '<i class="arrow">↓</i>';
                    target.innerHTML = target.innerHTML + arrowHtml;
                    init();
                }
            }

            function init() {
                var tArray = list;
                tArray.sort(function (a, b) {
                    var comparedContent1 = "";
                    var comparedContent2 = "";
                    if (sort.field == "name") {
                        comparedContent1 = a.class + "-" + a.name;
                        comparedContent2 = b.class + "-" + b.name;
                    } else {
                        comparedContent1 = a[sort.field];
                        comparedContent2 = b[sort.field];
                    }

                    if (sort.order == "desc") {
                        $t = comparedContent1;
                        comparedContent1 = comparedContent2;
                        comparedContent2 = t;
                    }

                    return comparedContent1 > comparedContent2 ? 1 : (comparedContent1 == comparedContent2 ? 0 : -1);
                });

                var html = "";
                for (i = 0, len = tArray.length; i < len; i++) {
                    var t = byteToText(tArray[i]["size"]);
                    var type = tArray[i]["class"];
                    html += "<tr>"
                        + '<td>' + getIconHtml(type) + '&nbsp;&nbsp;<a href="' + url + tArray[i]["name"] + '" data-type="' + type + '"' + ' class="file-name">' + tArray[i]["name"] + "</a></td>"
                        + "<td>" + t + "</td>"
                        + "<td>" + tArray[i]["date"] + "</td>"
                        + "</tr>";
                }
                tbody.innerHTML = html;
            }

            function getIconHtml(type)
            {
                var html;
                switch(type) {
                  case "f":
                     html = '<svg viewBox="0 0 12 16" width="12" style="line-height:26px"><path fill-rule="evenodd" d="M6 5H2V4h4v1zM2 8h7V7H2v1zm0 2h7V9H2v1zm0 2h7v-1H2v1zm10-7.5V14c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1h7.5L12 4.5zM11 5L8 2H1v12h10V5z"></path></svg>';
                     break;
                  case "d":
                     html = '<svg viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M13 4H7V3c0-.66-.31-1-1-1H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zM6 4H1V3h5v1z"></path></svg>';
                     break;
                  case "l":
                     html = '<svg viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M13 4H7V3c0-.66-.31-1-1-1H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zM1 3h5v1H1V3zm6 9v-2c-.98-.02-1.84.22-2.55.7-.71.48-1.19 1.25-1.45 2.3.02-1.64.39-2.88 1.13-3.73C4.86 8.43 5.82 8 7.01 8V6l4 3-4 3H7z"></path></svg>';
                     break;
                  default:
                     html = '<svg viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M8.5 1H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V4.5L8.5 1zM11 14H1V2h7l3 3v9zM6 4.5l4 3-4 3v-2c-.98-.02-1.84.22-2.55.7-.71.48-1.19 1.25-1.45 2.3.02-1.64.39-2.88 1.13-3.73.73-.84 1.69-1.27 2.88-1.27v-2H6z"></path></svg>';
                     break;
                }
                return html;
            }

            function byteToText(bytes) {
                if (isNaN(bytes)) {
                    return '';
                }
                var symbols = ['b', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
                var exp = Math.floor(Math.log(bytes) / Math.log(2));
                if (exp < 1) {
                    exp = 0;
                }
                var i = Math.floor(exp / 10);
                bytes = bytes / Math.pow(2, 10 * i);

                if (bytes.toString().length > bytes.toFixed(2).toString().length) {
                    bytes = bytes.toFixed(2);
                }
                return bytes + symbols[i];
            }

            function upload(file) {
              function up(file) {
                var formData = new FormData();
                formData.append("file", file);
                $.ajax({
                  type: 'post',
                  url: '/upload?path=' + path + '&file_name=' + file.name,
                  processData: false,
                  contentType: false,
                  data:formData,
                  success:function(ret){
                    ret = JSON.parse(ret);
                    if (ret.status == 1) {
                      window.location.reload();
                    } else {
                      alert(ret.message);
                    }
                  },
                  error:function(xhr, type){
                  }
                });
              }

              $.ajax({
                type: 'post',
                url: '/file_exist?path=' + path + '&file_name=' + file.name,
                dataType:'json',
                success:function(ret){
                  if (ret.status == 1) {
                      alert("已有相同文件，无法上传");
                  } else {
                      up(file);
                  }
                },
              });
            }

            if (write) {
                // 拖拽上传
                document.addEventListener("drop",preventDe);
                document.addEventListener("dragleave",preventDe);
                document.addEventListener("dragover",preventDe);
                document.addEventListener("dragenter",preventDe);

                function preventDe(e){
                  e.preventDefault();
                }

                document.addEventListener("drop",function(e){
                  e.preventDefault();
                  var file = e.dataTransfer.files[0];
                  upload(file);
                })

                document.addEventListener("keyup", function (e) {
                  if (e.keyCode == 85) {
                    $("#upload_file").click();
                  }
                })
                
                document.getElementById("upload_file").addEventListener("change", function (e) {
                  var files = document.getElementById("upload_file").files;
                  if (files.length > 0) {
                    upload(files[0]);
                  }
                })
            }

            $("body").on("contextmenu", ".file-name", function (e) {
                e.preventDefault();

                $('.menu').remove();

                var linkType = $(this).data("type");
                var menu = $('<ul class="menu"></ul>');

                var subMenus = [];
                if (linkType != "d") {
                  subMenus.push('<li class="download" data-href="' + $(this).attr("href") + '">下载</li>');
                }
        
                if (write) {
                  subMenus.push('<li class="delete" data-name="' + $(this).text() + '">删除</li>');
                }

                for (var i=0,len=subMenus.length; i<len; i++) {
                  menu.append(subMenus[i]);
                }

                if (subMenus.length > 0) {
                  menu.appendTo('body');
                    
                  menu.css({
                    left: e.pageX,
                    top: e.pageY
                  });
                }
            })

            $("body").on("contextmenu", function (e) {
                if (e.target.className != "file-name") {
                    $('.menu').remove();
                }
            })

            $("body").on("click", ".download", function (e) {
                var url = $(this).data("href");
                window.location.href = url + "?download=1";
            })

            $("body").on("click", ".delete", function (e) {
                if (confirm("确定要删除吗") == true) {
                    var name = $(this).data("name");
                    $.ajax({
                      type: 'post',
                      url: '/delete?path=' + path + '&file_name=' + name,
                      dataType:'json',
                      success:function(ret){
                        if (ret.status == 1) {
                          location.reload();
                        } else {
                          alert(ret.message);
                        }
                      },
                    });
                }
            })

            $("body").click(function () {
                $('.menu').remove();
            })
        })(window, document)
    </script>
</body>

</html>
