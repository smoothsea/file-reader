<head>
    <meta name=renderer content=webkit>
    <title>{{ file_path }}</title>
    <style>
        body {
            font-size: 13px;
        }

        i {
            font-style: normal;
        }

        .modal-window {
          position: fixed;
          background-color: rgba(255, 255, 255, 0.25);
          top: 0;
          right: 0;
          bottom: 0;
          left: 0;
          z-index: 999;
          visibility: visible;
          opacity: 1;
          pointer-events: auto;
          transition: all 0.3;
          display: none;
        }

        .modal-window > div {
          background-color: #EEEEEE;
          width: 80%;
          position: absolute;
          top: 50%;
          left: 50%;
          -webkit-transform: translate(-50%, -50%);
                  transform: translate(-50%, -50%);
          padding: 2em;
        }

        .modal-window header {
          font-weight: bold;
        }

        .modal-close {
          color: #aaa;
          line-height: 50px;
          font-size: 80%;
          position: absolute;
          right: 0;
          text-align: center;
          top: 0;
          width: 70px;
          text-decoration: none;
        }

        .modal-close:hover {
          color: black;
        }

        .append-content {
          display: block;
          background-color: #F8E0E6;           
          padding-bottom: 15px;
        }
    </style>
    <link rel="stylesheet" href="/public/default.min.css">
</head>

<body>
    <i style="color: red;">备注：如果文件太大，可能只显示了部分数据。如果要查看相关内容，可以用如下的全文搜索</i>
    <br>
    <br>
    <form method="get" action="/search" target="_blank">
        全文搜索：
        <input type="text" name="search">
        <input type="text" name="before" value="10" placeholder="前xx行">
        <input type="text" name="after" value="20" placeholder="后xx行">
        &nbsp;Aa<input type="checkbox" name="case_sensitive" value="true">&nbsp;
        <input type="hidden" name="path" value="{{ file_path }}">
        <input type="submit" value="搜索">
    </form>
    <br>

    <span class="load">加载中...</span>
    <div id="content" style="display: none;">{{ content }}</div>

    <div style="position: fixed;bottom: 10px;right: 30px; z-index: 100;
    cursor:pointer;">
        <span style="height:100px; display:block; color:#FFF; text-align:center;">
          <img id="write-icon" src="/public/plus.png" style="width:25px;height:25px;display:none"></img>
          <img src="/public/bottom.png" style="width:25px;height:25px;margin-top:10px" onclick="window.scrollTo({behavior: 'smooth', top: document.body.scrollHeight})"></img>
        </span>
    </div>

    <div id="open-modal" class="modal-window">
      <div>
        <a href="javascript:void(0)" title="Close" class="modal-close">Close</a>
        <div><textarea style="width: 95%; height: 500px" 
        onkeydown="writeEvent(event)"></textarea></div>
        </div>
    </div>

    <script src="/public/highlight.min.js"></script>
    <script src="/public/zepto.js"></script>
    <script>
        var content = '';
        var seek = {{ seek }};
        var path = '{{ file_path }}';
        var write = {{ write }};
        var defaultPageSize = 0;

        function handleContent(content) {
            var content = content
                .replace(/(\r\n|\r|\n)/g, '<br/>')
                .replace(/\s/g, '&nbsp;')
                .replace(/(请求地址:(&nbsp;)*(.*?)(<br\/>)+json:(&nbsp;)*(.*?)(<br\/>)+)/gi, function (match, p1, p2, p3, p4, p5, p6) {
                        return '<a target="blank" href="/debug?uri='+encodeURIComponent(p3)+'&json='+encodeURIComponent(p6)+'">调试</a> '+p1;
                })
                .replace(/(http|https)(:\/\/.*?)(<br\/>|&nbsp;|$)/g, '<a href="$1$2" target="_blank">$1$2$3</a>');
            return content;
        }

        function is_code() {
            var file = location.href.replace(/\/$/, "").split("/").pop();
            var suffix = file.split(".").pop();
            if (suffix !== undefined && ["php", "rs", "js", "html"].indexOf(suffix) >= 0) {
                return true;
            }
            return false;
        }
        
        function flushShow() {
            $("#content").html(content).show();
            $(".load").hide();
        }

        function appendToFile() {
            var data = {
                path: path,
                content: $("#open-modal textarea").val(),
              };
            $.ajax({
                url: "/append",
                type: "POST",
                dataType: "json",
                contentType: "application/x-www-form-urlencoded",
                data: JSON.stringify(data),
                success: function (ret) {
                  if (ret.status == 1) {
                    query(function () {
                      closeWrite();
                      window.scrollTo(0,document.documentElement.clientHeight);
                    });
                  } else {
                    alert(ret.message);
                  }
                }
            });
        }

        var lastKeynum,clearT;
        function writeEvent(e) {
            var keynum = window.event ? e.keyCode : e.which;
            if (keynum == 13) {
              if (lastKeynum == 17) {
                  // tab + enter
                  var textEle = $("#open-modal textarea");
                  textEle.val(textEle.val() + "\r\n");
              } else {
                appendToFile();
              }
            }
            lastKeynum = keynum;

            if (clearT) {
              clearTimeout(clearT);
            }
            clearT = setTimeout(function() {lastKeynum = undefined;}, 500);
        }

        function query(successCb) {
          $.ajax({
              url: "/more?seek=" + seek + "&path=" + path,
              dataType: "json",
              success: function (data) {
                  if (data.content) {
                      var newContent = handleContent(data.content);
                      var contentId = "append" + (new Date()).getTime();
                      content = content + newContent;
                      if (content.length > defaultPageSize * 2) {
                          content = content.substr(content.length - defaultPageSize)
                          flushShow();
                      } else {
                          $("#content").append('<span class="append-content" id="' + contentId +'">' + newContent + '</span>');
                      }
                      seek = data.seek;
                      setTimeout(function () {
                        $("#" + contentId).removeClass("append-content");
                      }, 5000);
                      successCb();
                  }
              }
          });
        }

        function closeWrite() {
          $("#open-modal textarea").val("");
          $("#open-modal").hide();
        }

        (function init() {
            content = $("#content").html();
            defaultPageSize = Math.max(content.length, 512000);
            if (is_code()) {
                content = '<pre><code>' + content + '</code></pre>';
            } else {
                content = handleContent(content);
                setInterval(query, 5000);
            }
            
            flushShow();
            if (is_code()) {
                hljs.initHighlightingOnLoad();
            }

            if (write) {
                $("#write-icon").show().css("display", "block");

                $("#write-icon").click(function () {
                  $("#open-modal").show();
                  $("#open-modal textarea").focus();
                });

                $(".modal-close").click(function () {
                  closeWrite();
                });
            }

            document.getElementsByTagName("body")[0].addEventListener("keydown", function (e) {
              var keynum = window.event ? e.keyCode : e.which;
              // Esc
              if (keynum == 27) {
                  closeWrite();
                }
            });
        })();


    </script>
</body>
